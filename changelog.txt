# Fixes
- Fixed lightbeams not being fogged.
- Fixed particles not being fogged.
- Fixed shields not being fogged.
- Fixed low-quality water not being fogged.
- Fixed the detail normal map in `normal_ext.detail` and `normal_ext.specular.detail` not being used.
- Fixed lights with projected textures not being handled correctly in `normal_ext.specular` and  `normal_ext.specular.detail`.

# Changes
- Made dithering always be applied when Film Grain is enabled.
- Added log messages for when a material is loaded/unloaded.
- Added log messages when a texture is loaded.
- The source files for Shader Patch's `core.lvl` are no longer distributed in binary builds of Shader Patch, this cuts the download size down. If you want them you must now explicitly acquire them from Shader Patch's source files.
- Shader Patch's installer now removes files it detects as being from previous versions of Shader Patch that are now unused.

# Scary Changes
- Removed unused shaders `bump`, `detail`, `pervertexdiffuselighting`, `scroll`, `specmap` and "sprite".
- Complete reworking of shader compilation.
- Changed Shader Patch to intercept Direct3D 9 using `d3d9.dll` instead of `dinput8.dll`. This change was made to make what Shader Patch does more apparent to end users. This is also actually a change back as early versions of Shader Patch did use `d3d9.dll` but I changed to `dinput8.dll` to make it easy to use D3D9 debugging tools with Shader Patch, the shift towards Direct3D 11 removes the need for this.

# Issues
- Refraction projected texture uses linear_wrap_sampler.
- Projected cube textures are broken again. :(

# Work still to be done.
- sRGB to linear handling for vertex colors.
- get_material_color and get_static_diffuse_color refactors
- Lighting is a mess in `normal_ext`. Could also be imrpoved across the board similar to transform handling.
- Fixup water refraction condition handling in C++.
- Investigate Broken Specular + Normalmap
- Fix function emu nonsense.
- Move FPS unlock patch out of d3d9::Creator to core::Shader_patch
- Implement stretching in Shader_patch::stretch_rendertarget